package nl.thestructureworld.account;

import nl.thestructureworld.client.TheStructureWorld;
import nl.thestructureworld.client.gui.GuiInventory;
import nl.thestructureworld.client.gui.IngameGui;
import nl.thestructureworld.client.renderer.EntityRenderer;
import nl.thestructureworld.client.renderer.entity.NormalMappingRenderer;
import nl.thestructureworld.client.renderer.terrain.TerrainRenderer;
import nl.thestructureworld.server.TheStructureWorldServer;

import org.lwjgl.input.Keyboard;
import org.lwjgl.input.Mouse;

public class MouseControl
{
	public static int scroll = 0;
	public static int isButtonDown = 0;
	public static float scrollHeight = 0;
	public static EntityRenderer render;
	public static TheStructureWorld world = TheStructureWorld.TheStructureWorld;
	public static boolean scrollButtunPushed = false;
	public static int getObject = -1;
	public static int getWaterObject = -1;
	public static float rotateObjectX = -666F;
	public static float rotateObjectY = -666F;
	public static float rotateObjectZ = -666F;
	public static int switchRotationModes = 0;
	
	public static void checkMouseWheel() 
	{	
			if(Mouse.isButtonDown(2))
			{
			if(scrollButtunPushed){scrollButtunPushed=false;}
			else if(!scrollButtunPushed){scrollButtunPushed=true;}
			isButtonDown = 2;	
			}
			else if(Mouse.isButtonDown(0))
			{
			isButtonDown = 0;	
			}
			else if(Mouse.isButtonDown(1))
			{
			isButtonDown = 1;	
			}
			else
			{
			isButtonDown = -1;		
			}
		    int dWheel = Mouse.getDWheel();
		    if (dWheel < 0) 
		    {
		    	scroll = -1;
		    } 
		    else if (dWheel > 0)
		    {
		    scroll = 1;
		    }
		    else 
		    {
		    scroll = 0;	
		    }
	}
	
	
    public static boolean changeTime = true;
    public static int closeConsole = 0;
    
	public static void setTime()
	{
	 if(changeTime&&GameProfile.resetTextTimer==0&&TheStructureWorldServer.getServer().worldServers[0].StructureWorldInfo.getWorldTime()>0)
  	 {
   	 if(Keyboard.isKeyDown(Keyboard.KEY_EQUALS))
   	 {
   	 TheStructureWorldServer.getServer().worldServers[0].StructureWorldInfo.addWorldTime(100);
   	 } 
   	 else if(Keyboard.isKeyDown(Keyboard.KEY_MINUS))
   	 {
   	 TheStructureWorldServer.getServer().worldServers[0].StructureWorldInfo.addWorldTime(-100);
   	 }
  	 }
	 
  	 if(!GameProfile.consoleOpened && GameProfile.resetTextTimer==0 && Keyboard.isKeyDown(Keyboard.KEY_T))
  	 {
  	 if(changeTime)
  	 {
  	 changeTime=false;closeConsole=80;
  	 }
  	 else if(!changeTime)
  	 {
  	 changeTime=true;closeConsole=80;
  	 }
  	 GameProfile.text = "Change Time: "+changeTime;
	 GameProfile.consoleTimer = 5;
     GameProfile.consoleOpened = true;
  	 GameProfile.resetTextTimer=10; 
  	 }
  	 if(closeConsole>0)
  	 {
  	 --closeConsole;
  	 }
  	 if(closeConsole>0&&closeConsole<3){GameProfile.consoleOpened = false;GameProfile.text="";}
	}
	
	public static void controlForgeObjects()
	{
		if(render.terrain != null &&  ((getObject == -1 && getWaterObject != -1) || (getObject != -1 && getWaterObject == -1)))
        {
        render.mouseOverX = world.objectMouseOver.TerrainObjectX;
        render.mouseOverZ = world.objectMouseOver.TerrainObjectZ;
        render.mouseOverY = render.terrain.returnHeight((int)render.mouseOverX,(int)render.mouseOverZ)+scrollHeight;
        }
		
		if(!(TheStructureWorld.TheStructureWorld.currentScreen instanceof GuiInventory) && render != null)
		{	
		if(getObject == -1 && getWaterObject == -1 && Mouse.isButtonDown(1))
		{
		for(int id = 0;id<render.waterList.size();++id)
		{
		if(world.objectMouseOver.TerrainObjectX+2 > render.waterList.get(id).getX()  && world.objectMouseOver.TerrainObjectX-2 < render.waterList.get(id).getX())
		{
		if(world.objectMouseOver.TerrainObjectZ+2 > render.waterList.get(id).getZ()  && world.objectMouseOver.TerrainObjectZ-2 < render.waterList.get(id).getZ())
		{
		TheStructureWorld.TheStructureWorld.canEditTerrain=100;
		getWaterObject = id;
		return;
		}}		
		}
		for(int id = 0;id<EntityRenderer.nmr.ObjectsEntityRenderList.size();++id)
		{
			if(world.objectMouseOver.TerrainObjectX+2 > EntityRenderer.nmr.ObjectsEntityRenderList.get(id).entity.position.x  && world.objectMouseOver.TerrainObjectX-2 < EntityRenderer.nmr.ObjectsEntityRenderList.get(id).entity.position.x)
			{
			if(world.objectMouseOver.TerrainObjectZ+2 > EntityRenderer.nmr.ObjectsEntityRenderList.get(id).entity.position.z  && world.objectMouseOver.TerrainObjectZ-2 < EntityRenderer.nmr.ObjectsEntityRenderList.get(id).entity.position.z)
			{
				TheStructureWorld.TheStructureWorld.canEditTerrain=100;
				getObject = id;
				return;
			}}
		}}}
		if(Mouse.isButtonDown(0))
		{
			getObject = -1;	
			getWaterObject = -1;
			render.mouseOverX = 0;
		    render.mouseOverZ = 0;
		    render.mouseOverY = 155;
		    rotateObjectY = -666F;
		    rotateObjectX = -666F;
		    rotateObjectZ = -666F;
		}
		if(isButtonDown == 1 && (scroll == 1||scroll == -1))
		{
			++switchRotationModes;
		}
		if(switchRotationModes==3){switchRotationModes=0;}
		
		
		
		if(scrollButtunPushed){if(scroll == 1){scrollHeight+=0.1F;}else if(scroll == -1){scrollHeight-=0.1F;}}		
		else if(!scrollButtunPushed)
		{
		if(scroll == 1&&switchRotationModes==0)
		{
			rotateObjectX+=1F;
		}
		else if(scroll == -1&&switchRotationModes==0)
		{
			rotateObjectX-=1F;
		}	
		else if(scroll == 1&&switchRotationModes==1)
		{
			rotateObjectY+=1F;
		}
		else if(scroll == -1&&switchRotationModes==1)
		{
			rotateObjectY-=1F;
		}
		else if(scroll == 1&&switchRotationModes==2)
		{
			rotateObjectZ+=1F;
		}
		else if(scroll == -1&&switchRotationModes==2)
		{
			rotateObjectZ-=1F;
		}
		}
		
		
		
	}

}