package nl.thestructureworld.network.play.client;

import gnu.trove.map.TIntObjectMap;
import gnu.trove.map.hash.TIntObjectHashMap;

import java.util.Iterator;
import java.util.Map;

import nl.thestructureworld.network.play.client.INetHandlerHandshakeServer.C00Handshake;

import org.apache.logging.log4j.LogManager;

import com.google.common.collect.BiMap;
import com.google.common.collect.HashBiMap;
import com.google.common.collect.Iterables;
import com.google.common.collect.Maps;

public enum EnumConnectionState
{
    HANDSHAKING("HANDSHAKING", 0, -1, null)
    {
        {
            this.setPacket_A(0, C00Handshake.class);
        }
    },
    PLAY("PLAY", 1, 0, null)
    {
        {
            this.setPacket_B(0, S00PacketKeepAlive.class);
            this.setPacket_B(1, S01PacketJoinGame.class);
            this.setPacket_B(3, S03PacketTimeUpdate.class);
            this.setPacket_B(4, S04PacketEntityEquipment.class);
            this.setPacket_B(5, S05PacketSpawnPosition.class);
            this.setPacket_B(6, S06PacketUpdateHealth.class);
            this.setPacket_B(7, S07PacketRespawn.class);
            this.setPacket_B(8, S08PacketPlayerPosLook.class);
            this.setPacket_B(9, S09PacketHeldItemChange.class);
            this.setPacket_B(11, S0BPacketAnimation.class);
            this.setPacket_B(12, S0CPacketSpawnPlayer.class);
            this.setPacket_B(13, S0DPacketCollectItem.class);
            this.setPacket_B(14, S0EPacketSpawnObject.class);
            this.setPacket_B(18, S12PacketEntityVelocity.class);
            this.setPacket_B(19, S13PacketDestroyEntities.class);
            this.setPacket_B(20, S14PacketEntity.class);
            this.setPacket_B(21, S14PacketEntity.S15PacketEntityRelMove.class);
            this.setPacket_B(22, S14PacketEntity.S16PacketEntityLook.class);
            this.setPacket_B(23, S14PacketEntity.S17PacketEntityLookMove.class);
            this.setPacket_B(24, S18PacketEntityTeleport.class);
            this.setPacket_B(25, S19PacketEntityHeadLook.class);
            this.setPacket_B(26, S19PacketEntityStatus.class);
            this.setPacket_B(27, S1BPacketEntityAttach.class);
            this.setPacket_B(28, S1CPacketEntityMetadata.class);
            this.setPacket_B(33, S21PacketAreaData.class);
            this.setPacket_B(34, S22PacketMultiTerrainObjectChange.class);
            this.setPacket_B(35, S23PacketTerrainObjectChange.class);
            this.setPacket_B(38, S26PacketMapAreaBulk.class);
            this.setPacket_B(39, S27PacketExplosion.class);
            this.setPacket_B(40, S28PacketEffect.class);
            this.setPacket_B(41, S29PacketSoundEffect.class);
            this.setPacket_B(43, S2BPacketChangeGameState.class);
            this.setPacket_B(45, S2DPacketOpenWindow.class);
            this.setPacket_B(46, S2EPacketCloseWindow.class);
            this.setPacket_B(47, S2FPacketSetSlot.class);
            this.setPacket_B(48, S30PacketWindowItems.class);
            this.setPacket_B(49, S31PacketWindowProperty.class);
            this.setPacket_B(50, S32PacketConfirmTransaction.class);
            this.setPacket_B(56, S38PacketPlayerListItem.class);
            this.setPacket_B(57, S39PacketPlayerAbilities.class);
            this.setPacket_B(63, S3FPacketCustomPayload.class);
            this.setPacket_B(64, S40PacketDisconnect.class);
            this.setPacket_A(0, C00PacketKeepAlive.class);
            this.setPacket_A(2, C02PacketUseEntity.class);
            this.setPacket_A(3, C03PacketPlayer.class);
            this.setPacket_A(4, C03PacketPlayer.C04PacketPlayerPosition.class);
            this.setPacket_A(5, C03PacketPlayer.C05PacketPlayerLook.class);
            this.setPacket_A(6, C03PacketPlayer.C06PacketPlayerPosLook.class);
            this.setPacket_A(7, PacketPlayerDigging.class);
            this.setPacket_A(8, C08PacketPlayerTerrainObjectPlacement.class);
            this.setPacket_A(9, C09PacketHeldItemChange.class);
            this.setPacket_A(10, C0APacketAnimation.class);
            this.setPacket_A(11, C0BPacketEntityAction.class);
            this.setPacket_A(12, C0CPacketInput.class);
            this.setPacket_A(13, C0DPacketCloseWindow.class);
            this.setPacket_A(14, C0EPacketClickWindow.class);
            this.setPacket_A(15, C0FPacketConfirmTransaction.class);
            this.setPacket_A(16, C10PacketForgeInventoryAction.class);
            this.setPacket_A(18, C13PacketPlayerAbilities.class);
            this.setPacket_A(21, C16PacketClientStatus.class);
            this.setPacket_A(22, C17PacketCustomPayload.class);
        }
    },
    STATUS("STATUS", 2, 1, null)
    {
       {
            this.setPacket_A(0, C00PacketServerQuery.class);
            this.setPacket_B(0, S00PacketServerInfo.class);
            this.setPacket_B(1, S01PacketPong.class);
        }
    },
    LOGIN("LOGIN", 3, 2, null)
    {
        {
            this.setPacket_B(0, S00PacketDisconnect.class);
            this.setPacket_B(1, S01PacketEncryptionRequest.class);
            this.setPacket_B(2, S02PacketLoginSuccess.class);
            this.setPacket_A(0, C00PacketLoginStart.class);
            this.setPacket_A(1, C01PacketEncryptionResponse.class);
        }
    };
    private static final TIntObjectMap field_150764_e = new TIntObjectHashMap();
    private static final Map field_150761_f = Maps.newHashMap();
    private final int field_150762_g;
    private final BiMap field_150769_h;
    private final BiMap field_150770_i;
 
    private EnumConnectionState(int funci_i45152_3_)
    {
        this.field_150769_h = HashBiMap.create();
        this.field_150770_i = HashBiMap.create();
        this.field_150762_g = funci_i45152_3_;
    }

    protected EnumConnectionState setPacket_A(int funci_150751_1_, Class funci_150751_2_)
    {
        String var3;

        if (this.field_150769_h.containsKey(Integer.valueOf(funci_150751_1_)))
        {
            var3 = "Serverbound packet ID " + funci_150751_1_ + " is already assigned to " + this.field_150769_h.get(Integer.valueOf(funci_150751_1_)) + "; cannot re-assign to " + funci_150751_2_;
            LogManager.getLogger().fatal(var3);
            throw new IllegalArgumentException(var3);
        }
        else if (this.field_150769_h.containsValue(funci_150751_2_))
        {
            var3 = "Serverbound packet " + funci_150751_2_ + " is already assigned to ID " + this.field_150769_h.inverse().get(funci_150751_2_) + "; cannot re-assign to " + funci_150751_1_;
            LogManager.getLogger().fatal(var3);
            throw new IllegalArgumentException(var3);
        }
        else
        {
            this.field_150769_h.put(Integer.valueOf(funci_150751_1_), funci_150751_2_);
            return this;
        }
    }

    protected EnumConnectionState setPacket_B(int funci_150756_1_, Class funci_150756_2_)
    {
        String var3;

        if (this.field_150770_i.containsKey(Integer.valueOf(funci_150756_1_)))
        {
            var3 = "Clientbound packet ID " + funci_150756_1_ + " is already assigned to " + this.field_150770_i.get(Integer.valueOf(funci_150756_1_)) + "; cannot re-assign to " + funci_150756_2_;
            LogManager.getLogger().fatal(var3);
            throw new IllegalArgumentException(var3);
        }
        else if (this.field_150770_i.containsValue(funci_150756_2_))
        {
            var3 = "Clientbound packet " + funci_150756_2_ + " is already assigned to ID " + this.field_150770_i.inverse().get(funci_150756_2_) + "; cannot re-assign to " + funci_150756_1_;
            LogManager.getLogger().fatal(var3);
            throw new IllegalArgumentException(var3);
        }
        else
        {
            this.field_150770_i.put(Integer.valueOf(funci_150756_1_), funci_150756_2_);
            return this;
        }
    }

    public BiMap tsw_funci_150753_a()
    {
        return this.field_150769_h;
    }

    public BiMap tsw_funci_150755_b()
    {
        return this.field_150770_i;
    }

    public BiMap tsw_funci_150757_a(boolean funci_150757_1_)
    {
        return funci_150757_1_ ? this.tsw_funci_150755_b() : this.tsw_funci_150753_a();
    }

    public BiMap tsw_funci_150754_b(boolean funci_150754_1_)
    {
        return funci_150754_1_ ? this.tsw_funci_150753_a() : this.tsw_funci_150755_b();
    }

    public int tsw_funci_150759_c()
    {
        return this.field_150762_g;
    }

    public static EnumConnectionState tsw_funci_150760_a(int funci_150760_0_)
    {
        return (EnumConnectionState)field_150764_e.get(funci_150760_0_);
    }

    public static EnumConnectionState tsw_funci_150752_a(Packet funci_150752_0_)
    {
        return (EnumConnectionState)field_150761_f.get(funci_150752_0_.getClass());
    }

    EnumConnectionState(String ignore1, int ignore2, int funci_i1197_3_, Object funci_i1197_4_)
    {
        this(funci_i1197_3_);
    }

    static {
        EnumConnectionState[] var0 = values();
        int var1 = var0.length;

        for (int var2 = 0; var2 < var1; ++var2)
        {
            EnumConnectionState var3 = var0[var2];
            field_150764_e.put(var3.tsw_funci_150759_c(), var3);
            Iterator var4 = Iterables.concat(var3.tsw_funci_150755_b().values(), var3.tsw_funci_150753_a().values()).iterator();

            while (var4.hasNext())
            {
                Class var5 = (Class)var4.next();

                if (field_150761_f.containsKey(var5) && field_150761_f.get(var5) != var3)
                {
                    throw new Error("Packet " + var5 + " is already assigned to protocol " + field_150761_f.get(var5) + " - can\'t reassign to " + var3);
                }

                field_150761_f.put(var5, var3);
            }
        }
    }
}
