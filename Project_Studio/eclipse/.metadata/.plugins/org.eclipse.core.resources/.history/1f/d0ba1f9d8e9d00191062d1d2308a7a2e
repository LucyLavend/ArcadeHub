package nl.thestructureworld.client.gui;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Collections;
import java.util.Date;
import nl.thestructureworld.client.ExceptionA;
import nl.thestructureworld.client.FileBasicJava;
import nl.thestructureworld.client.TheStructureWorld;
import nl.thestructureworld.client.renderer.EntityRenderer;
import nl.thestructureworld.client.renderer.Tessellator;
import nl.thestructureworld.client.renderer.WorldRenderer;
import nl.thestructureworld.client.renderer.terrain.RenderTerrain;
import nl.thestructureworld.client.renderer.terrain.Terrain;
import nl.thestructureworld.util.MathHelper;
import nl.thestructureworld.world.WorldSettings;
import nl.thestructureworld.world.storage.ISaveFormat;
import nl.thestructureworld.world.storage.ISaveHandler;
import nl.thestructureworld.world.storage.StructureWorldSaveFormatComparator;
import nl.thestructureworld.world.storage.StructureWorldInfo;
import org.apache.commons.io.FileUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.lwjgl.opengl.GL11;

public class SelectWorldGui extends GuiScreen
{
    private static final Logger logger = LogManager.getLogger();
    protected GuiScreen thisScreen;
    private int selectedID;
    private java.util.List list;
    private SelectWorldGui.List listSelected;
    private String[] gameType = new String[3];
    private boolean field_146643_x;


    public SelectWorldGui(GuiScreen thisScreen)
    {
        this.thisScreen = thisScreen;
        TheStructureWorld.TheStructureWorld.currentScreen = this;
        this.backGroundTexture = "/menu/wooden hut background.png";
    }

    /**
     * Adds the buttons (and other controls) to the screen in question.
     */
    public void initGui()
    {
        try
        {
        	ISaveFormat var1 = this.thestructureworld.getSaveLoader();
            this.list = var1.getSaveList();
            Collections.sort(this.list);
            this.selectedID = -1;
        }
        catch (ExceptionA var2)
        {
            logger.error("Couldn\'t load level list", var2);
             return;
        }
        this.gameType[WorldSettings.GameType.SURVIVAL.getID()] = "Survival";
        this.gameType[WorldSettings.GameType.FORGE.getID()] = "Forge";
        this.listSelected = new SelectWorldGui.List();
        this.listSelected.buttonSize(4, 5);
        this.addButtons();
    }


    protected String getFileName(int id)
    {
        return ((StructureWorldSaveFormatComparator)this.list.get(id)).getFileName();
    }

    ButtonBasic deleteButton;
    public void addButtons()
    {
        this.buttonList.add(new ButtonBasic(3, (int)(this.width / 2.3) , (int)(this.height / 1.6), 72, 20, "Create"));
        deleteButton = 		new ButtonBasic(2, (int)(this.width / 2.3) , (int)(this.height / 1.4), 72, 20, "Delete");
        if(SelectWorldGui.this.getFileName == "")
        {
        	this.deleteButton.enabled = false;
        }
        else
        {
        	this.deleteButton.enabled = true;
        }
        this.buttonList.add(deleteButton);
        this.buttonList.add(new ButtonBasic(0, (int)(this.width / 2.3) , (int)(this.height / 1.2), 72, 20, "Cancel"));  
    }
    
    public static int clicked = 0;
 
    protected void actionPerformed(ButtonBasic button)
    {
        if(button.enabled)
        {
        	if(button.id != 7 || button.id != 3 || button.id != 0 || button.id != 2)
            {
         	   clicked = 0;
            }
            if(button.id == 2)
            {
            	File file = new File(FileBasicJava.source+"/The Structure World/saves/"+SelectWorldGui.this.getFileName+"/");
            	try 
            	{
				FileUtils.deleteDirectory(file);
				} 
            	catch (IOException e)
				{
				logger.info("File deleted successfully: "+SelectWorldGui.this.getFileName+" in Folder /saves");
				}
            	this.thestructureworld.displayGuiScreen(this);
            }
            else if(button.id == 3)
            {
            this.thestructureworld.displayGuiScreen(new CreateStructureWorldGui(this));
            }
            else if(button.id == 0)
            {
            this.thestructureworld.displayGuiScreen(this.thisScreen);
            }
            else if(button.id == 7)
            {
            	CreateStructureWorldGui var5 = new CreateStructureWorldGui(this);
                ISaveHandler isave = this.thestructureworld.getSaveLoader().getSaveLoader(this.getFileName(this.selectedID), false);
                isave.flush();
                var5.getWorldInfo(isave.loadStructureWorldInfo());
                this.thestructureworld.displayGuiScreen(var5);
            }
        }
    }

    /**
     * Draws the screen and all the components in it.
     */
    public void drawScreen(int x, int y)
    {
    	super.drawScreen(x, y);
        this.listSelected.renderSlots(x, y);
    }

    public static String getFileName = "";

    public class List extends GuiSlot
    {
      
        public List()
        {
            super(SelectWorldGui.this.thestructureworld, SelectWorldGui.this.width, SelectWorldGui.this.height, 32, SelectWorldGui.this.height - 64, 36);
        }

        protected int getSize()
        {
            return SelectWorldGui.this.list.size();
        }
        
        protected void elementClicked(int id, boolean doubleClicked)
        {
            SelectWorldGui.this.selectedID = id;
            boolean canClick = SelectWorldGui.this.selectedID >= 0 && SelectWorldGui.this.selectedID < this.getSize();
            
            if(canClick)
            {
              deleteButton.enabled = true;
              ++SelectWorldGui.clicked;
              
              if(SelectWorldGui.clicked == 2)
              {
            	String worldname = ((StructureWorldSaveFormatComparator)SelectWorldGui.this.list.get(id)).getDisplayName();
            	TheStructureWorld.TheStructureWorld.displayGuiScreen(new LoadingScreenGui(worldname));
                TheStructureWorld.TheStructureWorld.setScreenLock();
                String name = SelectWorldGui.this.getFileName(id);
                
                if (name == null)
                {
                	name = "Structure World" + id;
                }
                
                if (worldname == null || MathHelper.stringNullOrLengthZero(worldname))
                {
                   worldname = "Structure World" + " " + (id + 1);
                }
                
                if (SelectWorldGui.this.thestructureworld.getSaveLoader().canLoadWorld(name))
                {
                	SelectWorldGui.this.thestructureworld.launchIntegratedServer(name, worldname, (WorldSettings)null);
                }
                }
           }
           else
           {
            deleteButton.enabled = false;
           }
            
        }

        protected boolean isSelected(int idClicked)
        {
            return idClicked == SelectWorldGui.this.selectedID;
        }

        protected void drawSlot(int id, int X, int Y, int u2, Tessellator tess, int u3, int u4)
        {
            	StructureWorldSaveFormatComparator StructureWorldSaveFormatComparator = (StructureWorldSaveFormatComparator)SelectWorldGui.this.list.get(id);
            	String WorldName = StructureWorldSaveFormatComparator.getFileName();
            	String GameType = SelectWorldGui.this.gameType[StructureWorldSaveFormatComparator.getEnumGameType().getID()];
            	String Difficulty = StructureWorldSaveFormatComparator.getDifficulty();
                SelectWorldGui.this.getFileName = WorldName;
                SelectWorldGui.this.drawString(SelectWorldGui.this.fontRendererObj, "|" + WorldName + "|", X + 50, Y + 12-10, 8421504);
                //SelectWorldGui.this.drawString(SelectWorldGui.this.fontRendererObj, "GameType:"+GameType+", Difficulty:"+Difficulty, X + 2, Y + 12 , 8421504);
                //SelectWorldGui.this.drawString(SelectWorldGui.this.fontRendererObj, "Gravity:"+StructureWorldSaveFormatComparator.getGravity(), X + 2, Y + 22 , 8421504);
        }
    }
}
