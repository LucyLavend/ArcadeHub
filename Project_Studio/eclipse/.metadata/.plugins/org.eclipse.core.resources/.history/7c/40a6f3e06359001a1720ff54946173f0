package nl.miystengine.client;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.reflect.ParameterizedType;
import java.net.Authenticator;
import java.net.InetSocketAddress;
import java.net.PasswordAuthentication;
import java.net.Proxy;
import java.net.Proxy.Type;
import java.net.URL;
import java.net.URLConnection;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Random;
import joptsimple.ArgumentAcceptingOptionSpec;
import joptsimple.NonOptionArgumentSpec;
import joptsimple.OptionParser;
import joptsimple.OptionSet;
import nl.miystengine.client.audio.AudioMaster;
import nl.miystengine.client.audio.Source;
import com.google.common.collect.HashMultimap;
import com.google.gson.Gson;

public class Main
{
    public static boolean backup = true;
    

    static int i = 1;
    static int j = 5;
    
    
    public static void main(String[] option)
    {
    	if(backup)
    	{
    		FileBasicJava.backupFile();
    	}
        System.setProperty("java.net.preferIPv4Stack", "true");
        OptionParser var1 = new OptionParser();
        var1.allowsUnrecognizedOptions();
        var1.accepts("fullscreen");
        ArgumentAcceptingOptionSpec scale = var1.accepts("scale").withRequiredArg().defaultsTo("3");
        ArgumentAcceptingOptionSpec var13 = var1.accepts("accessToken").withRequiredArg().required();
        ArgumentAcceptingOptionSpec var14 = var1.accepts("version").withRequiredArg().required();
        ArgumentAcceptingOptionSpec var17 = var1.accepts("userProperties").withRequiredArg().required();
        ArgumentAcceptingOptionSpec var18 = var1.accepts("assetIndex").withRequiredArg();
        NonOptionArgumentSpec var20 = var1.nonOptions();
        OptionSet Option = var1.parse(option);
        List var22 = Option.valuesOf(var20);
        MiystEngine tsw = new MiystEngine(Float.parseFloat((String)scale.value(Option)),Option.has("fullscreen"), prox, HashMultimap.create(), Option.has(var18) ? (String)var18.value(Option) : null);
        if (!var22.isEmpty())
        {
            System.out.println("Completely ignored arguments: " + var22);
        }
        Thread.currentThread().setName("Client thread");
        tsw.run();
    }
    
     
}
