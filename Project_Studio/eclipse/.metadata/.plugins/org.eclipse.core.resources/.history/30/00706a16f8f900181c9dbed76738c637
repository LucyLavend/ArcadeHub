package nl.thestructureworld.client.renderer.entity;
 
import java.util.Random;

import nl.thestructureworld.client.GameProfile;
import nl.thestructureworld.client.TheStructureWorld;
import nl.thestructureworld.client.renderer.EntityRenderer;
import nl.thestructureworld.client.renderer.terrain.Terrain;
import nl.thestructureworld.client.shaders.normal.NormalMappingShader;

import org.lwjgl.input.Keyboard;
import org.lwjgl.util.vector.Vector3f;
 
public class BasicEntityRender
{
    protected ModelBasic model;
    public Vector3f position;
    public float rotX,rotY,rotZ,reflecY,modelY,x,y,z;
    protected float scale;
    private int textureIndex = 0;
    public Random rand = new Random();
    public boolean deleteMe = false;
    public int hasNormals;
    public float[] textureCoords = new float[]{1,1,0,0};
    public int textureType;
    public boolean reCreateModel = false;
    public float alpha = 1;
    //0.50025303894958497146F
	
    public BasicEntityRender(ModelBasic model, float[] position,float reflecY, float rotX, float rotY, float rotZ,float scale) 
    {
    	this.model = model;
    	this.position = new Vector3f(position[0],Terrain.getHeightFromMap((int)position[0],(int)position[1],false,null),position[1]);  
        this.rotX = rotX;
        this.rotY = rotY;
        this.rotZ = rotZ;
        this.reflecY = reflecY;
        this.scale = scale;
        this.hasNormals = model.hasNormals;
        
        this.position.y = 0.2F+(Terrain.getHeightFromMap((int)this.position.x+6,(int)this.position.z+6,false,null));
		
    }
    
    public BasicEntityRender(float fixModelY,ModelBasic model, float[] position,float reflecY, float rotX, float rotY, float rotZ,float scale) 
    {
        this.model = model;
        this.position = new Vector3f(position[0],Terrain.getHeightFromMap((int)position[0],(int)position[1],false,null),position[1]);  
        this.rotX = rotX;
        this.rotY = rotY;
        this.rotZ = rotZ;
        this.reflecY = reflecY;
        this.modelY = fixModelY;
        this.scale = scale;
        this.hasNormals = model.hasNormals;
        
        this.position.y = 0.2F+(Terrain.getHeightFromMap((int)this.position.x+6,(int)this.position.z+6,false,null));
    	
    }
    
    public boolean renderModel(NormalMappingShader shader){return false;}
 
    
    public void updateRenderer()
    {
    	if(Keyboard.isKeyDown(Keyboard.KEY_0))
    	{
    	System.out.print("Pressed");
    	}
    	
    	if(TheStructureWorld.TheStructureWorld!=null&&TheStructureWorld.TheStructureWorld.thePlayer!=null)		
		{
    		if(TheStructureWorld.TheStructureWorld.thePlayer.posX < this.position.x - 12 || TheStructureWorld.TheStructureWorld.thePlayer.posX > this.position.x + 12 || TheStructureWorld.TheStructureWorld.thePlayer.posZ < this.position.z - 12 || TheStructureWorld.TheStructureWorld.thePlayer.posZ > this.position.z + 12)
    		{
    			if(this.alpha > 0.5F)
    			{
    				//this.alpha -= 0.0001F * this.alpha;
    			}	
    			else
    			{
    				//this.deleteMe = true;
    			}
    		}
    		else if(this.alpha < 0.501F)
    		{
    			//this.alpha += 0.000001F * this.alpha;
    		}
    		else if(this.alpha < 1)
    		{
    			//this.alpha += 0.001F * this.alpha;
    		}
		}
    	addAnimation();
    }
    
    public void addAnimation(){}
     
    public void increasePosition(float dx, float dy, float dz){this.position.x+=dx;this.position.y+=dy;this.position.z+=dz;}
    
    public void setY(float yy){this.position.y=yy;}
 
    public void increaseRotation(float dx, float dy, float dz){this.rotX+=dx;this.rotY+=dy;this.rotZ+=dz;}
    
    public float getTextureXOffset(){return textureIndex;}
	
	public float getTextureYOffset(){return textureIndex;}
 
    public ModelBasic getModel(){return model;}
 
    public void setModel(ModelBasic model){this.model=model;}
 
    public Vector3f getPosition(){return position;}
 
    public void setPosition(Vector3f position){this.position=position;}
 
    public float getRotX(){return rotX;}
 
    public void setRotX(float rotX){this.rotX=rotX;}
 
    public float getRotY(){return rotY;}
 
    public void setRotY(float rotY){this.rotY = rotY;}
 
    public float getRotZ(){return rotZ;}
 
    public void setRotZ(float rotZ){this.rotZ = rotZ;}
 
    public float getScale(){return scale;}
 
    public void setScale(float scale){this.scale=scale;}
 
}