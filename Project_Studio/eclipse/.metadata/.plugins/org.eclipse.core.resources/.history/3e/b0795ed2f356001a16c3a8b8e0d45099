package game;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;

import javax.imageio.ImageIO;
import javax.imageio.ImageReader;
import javax.imageio.stream.ImageInputStream;

import org.lwjgl.util.vector.Vector3f;

import game.bionicles.bohrak.Lehvak_Bohrak;
import game.loadingscreen.LoadingTerrain;
import nl.miystengine.client.FileBasicJava;
import nl.miystengine.client.MiystEngine;
import nl.miystengine.client.audio.AudioMaster;
import nl.miystengine.client.audio.Source;
import nl.miystengine.client.gui.LoadingScreenGui;
import nl.miystengine.client.renderer.entity.EntityPickupRender;
import nl.miystengine.client.renderer.entity.EntityRendererBodyParts;
import nl.miystengine.client.renderer.entity.EntityRockRenderer;
import nl.miystengine.client.renderer.texture.ImageFrame;
import nl.miystengine.client.shaders.terrain.TerrainShader;
import nl.miystengine.client.water.WaterRender;
import nl.miystengine.entity.EntityPlayer;

public class GameMain
{	
	/**
	 * Set After the Loading Screen
	 */
	public EntityPlayer theMainPlayer;
	
	/**
	 * Will be called when the Constructor of the Miyst Engine
	 */
	public GameMain(){}
	
	/**
	 * Set the icon of the window
	 * @throws IOException
	 */
	public static ByteBuffer setIcon() throws IOException 
    {
    	  int icon  = MiystEngine.miystengine.rand.nextInt(4);
    	  String logo = "";
          if(icon == 1)
          {
          	 logo =	FileBasicJava.source+"/The Structure World/The Structure World Logo green.png";
          }
          if(icon == 2)
          {
          	 logo =	FileBasicJava.source+"/The Structure World/The Structure World Logo blue.png";
          }
          if(icon == 3)
          {
          	 logo =	FileBasicJava.source+"/The Structure World/The Structure World Logo purple.png";
          }
          if(icon == 4)
          {
          	 logo =	FileBasicJava.source+"/The Structure World/The Structure World Logo red.png";
          }
          if(logo == "")
          {
          	logo =	FileBasicJava.source+"/The Structure World/The Structure World Logo orange.png";
          }
          return MiystEngine.miystengine.getTextureManager().convertImageData(logo);
    }
	
	/**
	 * Called just before you enter the world but after everything else is loaded.
	 * Can be used to add the body parts of the player
	 */
	public void loadingBeforeEntering()
	{
		MiystEngine.miystengine.entityRenderer.nmr.spawnEntity(new EntityRendererBodyParts("Bohrak_Lehvak_Claw", 2F,2F,"Bohrak_Lehvak_Claw",new float[]{1,1,0,0},new float[]{0,155,0},0,0,0F,0, 0.8F));     	
		MiystEngine.miystengine.entityRenderer.nmr.spawnEntity(new EntityRendererBodyParts("Bohrak_Lehvak_Claw", 2F,2F,"Bohrak_Lehvak_Claw",new float[]{1,1,0,0},new float[]{0,155,0},0,0,0F,0, 0.8F));     	   
	}
	
	public static ImageFrame[] gif;
	
	/**
	 * Called After creation of the Framebuffer
	 */
	public void activatedOnStart()
	{
		//Runtime.getRuntime().exec("c:\\program files\\Unity Hub\\Unity Hub.exe", null, new File("c:\\program files\\Unity Hub\\"));
        File input = new File(FileBasicJava.source+"/The Structure World/95574ea.gif");
     	
        
        try 
		{
			InputStream targetStream = new FileInputStream(input);	
			ImageFrame[] images = MiystEngine.miystengine.getTextureManager().gifReader.readGif(targetStream);
		
			gif = images;
		} 
		catch (IOException e) 
		{
			e.printStackTrace();
		}
	}

	/**
	 * Called when in Main menu, loading screen or in-game
	 */
	public void updateOnDeltaTime(){}
	
	/**
	 * Called after rendering Entity, Water and Terrain
	 */
	public void updateAfterRenderering(){}
	
	/**
	 * Called After the start of the terrain shader and before the actual rendering
	 * @param shaderT 
	 */
	public void updateOnTerrainRenderering(TerrainShader shaderT)
	{
		shaderT.transitionsTerrainTexture(new Vector3f(154F,155.5F,157F));
	}
	
	/**
	 * Will activate when loading screen is showing but only in the first part,before everything is loaded
	 * @param loadingTimer, Min 5 and Max 31
	 * @return int loading timer next
	 */
	public String loadingScreenBegin(int loadingTimer)
	{
		return "";
	}
	
	////
	private LoadingTerrain load;
	///
	
	/**
	 * Will activate when loading screen is showing but only at the part where terrain textures should load
	 * @param loadingTimer, Min 86 and Max 109
	 * @return int loading timer next
	 */
	public String loadingScreenTerrain(int loadingTimer)
	{
		int loading = loadingTimer;
		if(this.load == null)
		{
			this.load = new LoadingTerrain();
		}
		return this.load.loadTerrain(loadingTimer);
	}
	
	
		
	/**
	 * Called just before you enter the world
	 */
	public void updateOnEnterWorld()
	{
		MiystEngine.miystengine.entityRenderer.nmr.spawnEntity(new EntityPickupRender(0,"Rock/Rock", "Rock/Rock","Grey Rock"));     	  	
		MiystEngine.miystengine.entityRenderer.nmr.spawnEntity(new EntityPickupRender(2,"Rock/Moss Rock", "Rock/Rock","Moss Rock"));     	  	
		MiystEngine.miystengine.entityRenderer.nmr.spawnEntity(new EntityPickupRender(3,"Rock/Obsidian", "Rock/Obsidian","Obsidian"));     	  	    	  	
		MiystEngine.miystengine.entityRenderer.nmr.spawnEntity(new EntityPickupRender(1,"plants/Twig", "plants/pickups/Twig","Twig"));     	  	 
	
		
		Lehvak_Bohrak claw = new Lehvak_Bohrak("Bohrak_Lehvak_Claw", "Bohrak_Lehvak", new float[]{0,0,0}, 0, 0, 0, 1F);
		claw.position = new Vector3f(266,154.5F,332);
		MiystEngine.miystengine.entityRenderer.nmr.spawnEntity(claw);
	}
	
  
	/**
	 * Loads the footstep sounds of the player
	 * @param source
	 */
	public void playFootsteps(Source source)
	{
		
	}
}