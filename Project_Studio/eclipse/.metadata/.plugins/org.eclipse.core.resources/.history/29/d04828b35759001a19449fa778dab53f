package nl.miystengine.client;

import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import nl.miystengine.client.audio.AudioMaster;
import nl.miystengine.client.audio.Source;
import nl.miystengine.client.renderer.EntityRenderer;
import nl.miystengine.client.renderer.ObjectRenderer;
import nl.miystengine.client.renderer.entity.ModelBasic;
import nl.miystengine.client.renderer.terrain.Terrain;
import nl.miystengine.client.renderer.terrain.TerrainRenderer;
import nl.miystengine.client.renderer.texture.TextureManager;
import nl.miystengine.client.shaders.Loader;
import nl.miystengine.client.shaders.OBJLoader;
import nl.miystengine.client.shaders.ShaderProgram;
import nl.miystengine.client.shaders.grass.GrassShader;
import nl.miystengine.client.shaders.normal.NormalMappingShader;
import nl.miystengine.client.shaders.terrain.TerrainShader;
import nl.miystengine.client.shaders.water.WaterShader;
import nl.miystengine.entity.EntityLivingBase;
import nl.miystengine.entity.EntityPlayer;

import org.lwjgl.input.Keyboard;
import org.lwjgl.opengl.GL11;
import org.lwjgl.opengl.GL20;

public class RefreshShaderKeybinds
{
    public static int refershF = 0;
    public static boolean hideStatGui = true;
    public static int reverseMouse = 1; 
    private MiystEngine tsw = MiystEngine.getMiystEngine();
    private static String VERTEX_FILE = FileBasicJava.sourceShaders+"screen/vertexShader.txt";
  	private static String FRAGMENT_FILE = FileBasicJava.sourceShaders+"screen/fragmentShader.txt";
  	
    public static void updateWorldMap(EntityLivingBase base, EntityRenderer entityRenderer)
    {
    	if(Keyboard.isKeyDown(Keyboard.KEY_F8) && refershF == 0)
    	{
    		EntityRenderer.ShaderGrass = new GrassShader();
    	 	EntityRenderer.ShaderGrass.start();
    		EntityRenderer.ShaderGrass.loadProjectionMatrix(EntityRenderer.projectionMatrix);
    		EntityRenderer.ShaderGrass.connectTextureUnits();
    		EntityRenderer.ShaderGrass.stop();
    		refershF = 100;
    	}
    	if(Keyboard.isKeyDown(Keyboard.KEY_F7) && refershF == 0)
    	{
    		EntityRenderer.shaderW = new WaterShader();
    		EntityRenderer.shaderW.start();
    		EntityRenderer.shaderW.loadProjectionMatrix(MiystEngine.miystengine.entityRenderer.camera.projectionMatrix());
    		EntityRenderer.shaderW.connectTextureUnits();
    		EntityRenderer.shaderW.stop();
    		refershF = 100;
    	}
    	if(Keyboard.isKeyDown(Keyboard.KEY_F4) && refershF == 0)
    	{
	    	try
			{
	    		Terrain.worldMap = ImageIO.read(new File(FileBasicJava.source+"/The Structure World/saves/"+Terrain.worldFolderName+"/blendMap.png"));
	    		MiystEngine.miystengine.entityRenderer.specialRefresh = true;
	    		refershF = 100;
			}
			catch(IOException e)
			{
				System.out.println("Warning: No world Map found!");
				System.out.println("Location: "+FileBasicJava.source+"/The Structure World/saves/"+Terrain.worldFolderName+"/blendMap.png");
			}
    	}
    	if(Keyboard.isKeyDown(Keyboard.KEY_F6) && refershF == 0)
        {
    		Source.stopPlayingSounds = true;
    		for(int i = 0;i < AudioMaster.source.size();++i)
       	 	{
    			AudioMaster.source.get(i).getSource().stop();
       	 	}
    		refershF = 100;
    		AudioMaster.cleanUp();
    		AudioMaster.init();
    		Source.stopPlayingSounds = false;
        }
    }
    
	public static void hideStatGui()
	{
		if(Keyboard.isKeyDown(Keyboard.KEY_F1) && refershF == 0)
		{
			refershF= 100;
			if(hideStatGui)
			{
				hideStatGui = false;
			}
			else if(!hideStatGui)
			{
				hideStatGui = true;
			}
		}
	}
	
	public static void RefreshObjectShader()
	{
		 	if(Keyboard.isKeyDown(Keyboard.KEY_F2) && refershF == 0)
	        {
		 		refershF = 100;
		 		EntityRenderer.shaderN = new NormalMappingShader();
		 		EntityRenderer.nmr = new ObjectRenderer(EntityRenderer.projectionMatrix);
		    }
		 	if(Keyboard.isKeyDown(Keyboard.KEY_F5) && refershF == 0)
	        {
		 		refershF = 100;
		 		MiystEngine.miystengine.fbo.shader = new nl.miystengine.client.shaders.basicscreen.StaticShader(VERTEX_FILE, FRAGMENT_FILE);  
		 		MiystEngine.miystengine.fbo.shader.start();
		 		MiystEngine.miystengine.fbo.shader.location_screenTexture = MiystEngine.miystengine.fbo.getColourTexture();
		 		MiystEngine.miystengine.fbo.shader.location_firstpersontexture = 4;
		 		MiystEngine.miystengine.fbo.shader.location_depthTexture = 0;
				MiystEngine.miystengine.fbo.shader.connectTextureUnits();
				MiystEngine.miystengine.fbo.shader.stop();
	        }
	}
	

	
	public static void RefreshTerrainShader(EntityLivingBase player)
	{
		 	if(Keyboard.isKeyDown(Keyboard.KEY_F3) && refershF == 0)
	        {
		 		refershF = 100;
				MiystEngine.miystengine.entityRenderer.ShaderT = new TerrainShader(TerrainShader.VERTEX_FILEN, TerrainShader.FRAGMENT_FILEN);
				MiystEngine.miystengine.entityRenderer.terrainRenderer = new TerrainRenderer(EntityRenderer.projectionMatrix);
				MiystEngine.miystengine.entityRenderer.worldRenderer.updateTerrain(MiystEngine.miystengine.thePlayer);	 		
				MiystEngine.miystengine.thePlayer.X = -66666666;
		 		MiystEngine.miystengine.thePlayer.Z = -66666666;
		        EntityRenderer.specialRefresh = true;
		        MiystEngine.miystengine.entityRenderer.updateArea();  
		    } 
	        if(refershF > 0)
	        {
	        	--refershF;
	        }
	}
	
	
}

