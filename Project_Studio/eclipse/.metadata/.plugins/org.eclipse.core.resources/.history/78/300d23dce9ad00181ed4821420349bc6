package nl.thestructureworld.client.gui;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Collections;
import java.util.Date;

import nl.thestructureworld.client.FileBasicJava;
import nl.thestructureworld.client.TheStructureWorld;
import nl.thestructureworld.client.renderer.EntityRenderer;
import nl.thestructureworld.client.renderer.Tessellator;
import nl.thestructureworld.client.renderer.WorldRenderer;
import nl.thestructureworld.crash.ExceptionA;
import nl.thestructureworld.util.EnumChatFormatting;
import nl.thestructureworld.util.MathHelper;
import nl.thestructureworld.world.WorldSettings;
import nl.thestructureworld.world.storage.ISaveFormat;
import nl.thestructureworld.world.storage.ISaveHandler;
import nl.thestructureworld.world.storage.StructureWorldSaveFormatComparator;
import nl.thestructureworld.world.storage.StructureWorldInfo;

import org.apache.commons.io.FileUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.lwjgl.opengl.GL11;

public class SelectWorldGui extends GuiScreen implements GuiYesNoCallback
{
    private static final Logger logger = LogManager.getLogger();
    protected GuiScreen thisScreen;
    private boolean field_146634_i;
    private int selectedID;
    private java.util.List list;
    private SelectWorldGui.List field_146638_t;
    private String[] field_146635_w = new String[3];
    private boolean field_146643_x;


    public SelectWorldGui(GuiScreen thisScreen)
    {
        this.thisScreen = thisScreen;
        TheStructureWorld.TheStructureWorld.currentScreen = this;
        this.backGroundTexture = "/menu/wooden hut background.png";
    }

    /**
     * Adds the buttons (and other controls) to the screen in question.
     */
    public void initGui()
    {
        try
        {
            this.func_146627_h();
        }
        catch (ExceptionA var2)
        {
            logger.error("Couldn\'t load level list", var2);
            this.thestructureworld.displayGuiScreen(new GuiErrorScreen("Unable to load worlds", var2.getMessage()));
            return;
        }
        this.field_146635_w[WorldSettings.GameType.SURVIVAL.getID()] = "Survival";
        this.field_146635_w[WorldSettings.GameType.FORGE.getID()] = "Forge";
        this.field_146638_t = new SelectWorldGui.List();
        this.field_146638_t.func_148134_d(4, 5);
        this.addButtons();
    }

    private void func_146627_h() throws ExceptionA
    {
        ISaveFormat var1 = this.thestructureworld.getSaveLoader();
        this.list = var1.getSaveList();
        Collections.sort(this.list);
        this.selectedID = -1;
    }

    protected String func_146621_a(int p_146621_1_)
    {
        return ((StructureWorldSaveFormatComparator)this.list.get(p_146621_1_)).getFileName();
    }

    protected String func_146614_d(int p_146614_1_)
    {
        String var2 = ((StructureWorldSaveFormatComparator)this.list.get(p_146614_1_)).getDisplayName();

        if (var2 == null || MathHelper.stringNullOrLengthZero(var2))
        {
            var2 = "Structure World" + " " + (p_146614_1_ + 1);
        }

        return var2;
    }
    
    
    ButtonBasic deleteButton;
    public void addButtons()
    {
        this.buttonList.add(new ButtonBasic(3, this.width / 2 - 76, this.height - 52, 150, 20, "Create"));
        deleteButton = new ButtonBasic(2, this.width / 2 - 76, this.height - 28, 72, 20, "Delete");
        if(SelectWorldGui.this.getFileName == "")
        {
        	this.deleteButton.enabled = false;
        }
        else
        {
        	this.deleteButton.enabled = true;
        }
        this.buttonList.add(deleteButton);
        this.buttonList.add(new ButtonBasic(0, this.width / 2 + 5, this.height - 28, 72, 20, "Cancel"));
    }

    protected void actionPerformed(ButtonBasic button)
    {
        if (button.enabled)
        {
            if (button.id == 2)
            {
            	File file = new File(FileBasicJava.source+"/The Structure World/saves/"+SelectWorldGui.this.getFileName+"/");
            	try 
            	{
				FileUtils.deleteDirectory(file);
				} 
            	catch (IOException e)
				{
				logger.info("File deleted successfully: "+SelectWorldGui.this.getFileName+" in Folder /saves");
				}
            	this.thestructureworld.displayGuiScreen(this);
            }
            else if (button.id == 3)
            {
            this.thestructureworld.displayGuiScreen(new CreateStructureWorldGui(this));
            }
            else if (button.id == 0)
            {
            this.thestructureworld.displayGuiScreen(this.thisScreen);
            }
            else if (button.id == 7)
            {
            	CreateStructureWorldGui var5 = new CreateStructureWorldGui(this);
                ISaveHandler isave = this.thestructureworld.getSaveLoader().getSaveLoader(this.func_146621_a(this.selectedID), false);
                isave.flush();
                var5.getWorldInfo(isave.loadStructureWorldInfo());
                this.thestructureworld.displayGuiScreen(var5);
            }
            else
            {
                this.field_146638_t.func_148147_a(button);
            }
        }
    }

    public void func_146615_e(int p_146615_1_)
    {
        this.thestructureworld.displayGuiScreen((GuiScreen)null);
        if (!this.field_146634_i)
        {
            this.field_146634_i = true;
            String var2 = this.func_146621_a(p_146615_1_);
            if (var2 == null)
            {
                var2 = "Structure World" + p_146615_1_;
            }
            String var3 = this.func_146614_d(p_146615_1_);
            if (var3 == null)
            {
                var3 = "Structure World" + p_146615_1_;
            }
            if (this.thestructureworld.getSaveLoader().canLoadWorld(var2))
            {
                this.thestructureworld.launchIntegratedServer(var2, var3, (WorldSettings)null);
            }
        }
    }
    
  
    /**
     * Draws the screen and all the components in it.
     */
    public void drawScreen(int x, int y, float f)
    {
    	super.drawScreen(x, y, f);
        this.field_146638_t.func_148128_a(x, y, f);
        int var4;
        for (var4 = 0; var4 < this.buttonList.size(); ++var4)
        {
            ((ButtonBasic)this.buttonList.get(var4)).drawButton(this.thestructureworld, x, y);
        }
        for (var4 = 0; var4 < this.labelList.size(); ++var4)
        {
            ((GuiLabel)this.labelList.get(var4)).func_146159_a(this.thestructureworld, x, y);
        }
    }

    public static String getFileName = "";

    class List extends GuiSlot
    {
      
        public List()
        {
            super(SelectWorldGui.this.thestructureworld, SelectWorldGui.this.width, SelectWorldGui.this.height, 32, SelectWorldGui.this.height - 64, 36);
            this.isClicked = false;
        }

        protected int getSize()
        {
            return SelectWorldGui.this.list.size();
        }
        
        public boolean isClicked = false;

        protected void elementClicked(int x, boolean doubleClicked)
        {
            SelectWorldGui.this.selectedID = x;
            boolean var5 = SelectWorldGui.this.selectedID >= 0 && SelectWorldGui.this.selectedID < this.getSize();
            if (doubleClicked && var5 && !this.isClicked)
            {
                SelectWorldGui.this.func_146615_e(x);
                this.isClicked = true;
                TheStructureWorld.TheStructureWorld.displayGuiScreen(new LoadingScreenGui());
            }
            deleteButton.enabled = true;
        }

        protected boolean isSelected(int idClicked)
        {
            return idClicked == SelectWorldGui.this.selectedID;
        }

        protected void drawSlot(int id, int X, int Y, int u2, Tessellator tess, int u3, int u4)
        {
            	StructureWorldSaveFormatComparator StructureWorldSaveFormatComparator = (StructureWorldSaveFormatComparator)SelectWorldGui.this.list.get(id);
            	String WorldName = StructureWorldSaveFormatComparator.getFileName();
            	String GameType = SelectWorldGui.this.field_146635_w[StructureWorldSaveFormatComparator.getEnumGameType().getID()];
            	String Difficulty = StructureWorldSaveFormatComparator.getDifficulty();
            	float getGravity = StructureWorldSaveFormatComparator.getGravity();
                SelectWorldGui.this.getFileName = WorldName;
                SelectWorldGui.this.drawString(SelectWorldGui.this.fontRendererObj, "<"+WorldName+ ">", X + 50, Y + 12-10, 8421504);
                SelectWorldGui.this.drawString(SelectWorldGui.this.fontRendererObj, "GameType:"+GameType+", Difficulty:"+Difficulty, X + 2, Y + 12 , 8421504);
                SelectWorldGui.this.drawString(SelectWorldGui.this.fontRendererObj, "Gravity:"+getGravity, X + 2, Y + 22 , 8421504);
        }
    }
}
