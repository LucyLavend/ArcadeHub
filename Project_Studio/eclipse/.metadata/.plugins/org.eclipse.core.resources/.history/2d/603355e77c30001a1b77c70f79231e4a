package nl.thestructureworld.client.gui.console;

import org.lwjgl.input.Keyboard;

public class AcceptedKeyboardKeys
{	
	public static int getNumber(String line)
	{
		int allNumbers;
		
		String[] splitlines = line.split(" ");
		
		String number = splitlines[splitlines.length - 1];
		
		boolean notANumber = false;
		
		if(!number.matches(" ") && !number.matches("0") && !number.matches("1") && !number.matches("2") && !number.matches("3") && !number.matches("4") && !number.matches("5") && !number.matches("6") && !number.matches("7") && !number.matches("8") && !number.matches("9"))
		{
			notANumber = true;
		}
		
		int text = Integer.parseInt(number.replace(" ", "").replace("]", "").replace("[", "").replace("|", "").replace("=", "").replace(")", "").replace("(", "").replace("+", "").replace("_", "").replace("-", "").replace("!", "").replace("a", "").replace("b", "").replace("c", "").replace("d", "").replace("e", "").replace("f", "").replace("g", "").replace("h", "").replace("i", "").replace("j", "").replace("k", "").replace("l", "").replace("m", "").replace("n", "").replace("o", "").replace("p", "").replace("q", "").replace("r", "").replace("s", "").replace("t", "").replace("u", "").replace("v", "").replace("w", "").replace("x", "").replace("y", "").replace("z", ""));
		
		
		if(text > 0)
		{
			return text;
		}
		else return -1;
	}
	
	public String getEacceptedKeyC()
	{
		if(Keyboard.isKeyDown(Keyboard.KEY_SPACE))
		{
			return " ";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_MINUS) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "_";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_1) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			return "!";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_9) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			return "(";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_0) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			return ")";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_MINUS))
		{
			return "-";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_EQUALS))
		{
			
			return "+";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_EQUALS) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "=";
		}
		else if(Keyboard.isKeyDown(220))
		{
			return "|";
		}
		else if(Keyboard.isKeyDown(221))
		{
			return "]";
		}
		else if(Keyboard.isKeyDown(219))
		{
			return "[";
		}
		else if(Keyboard.isKeyDown(188) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			return "<";
		}
		else if(Keyboard.isKeyDown(190) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			return ">";
		}	
		else if(Keyboard.isKeyDown(Keyboard.KEY_0))
		{
			
			return "0";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_1))
		{
			
			return "1";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_2))
		{
			
			return "2";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_3))
		{
			
			return "3";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_4))
		{
			
			return "4";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_5))
		{
			
			return "5";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_6))
		{
			
			return "6";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_7))
		{
			
			return "7";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_8))
		{
			
			return "8";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_9))
		{
			
			return "9";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_A) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "a";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_A) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "A";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_B) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "b";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_B) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "B";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_C) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "c";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_C) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "C";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_D) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "d";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_D) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "D";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_D) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "d";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_D) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "D";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_E) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "e";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_E) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "E";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_F) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "f";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_F) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "F";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_G) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "g";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_G) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "G";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_H) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "h";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_H) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "H";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_I) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "i";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_I) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "I";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_J) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "j";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_J) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "J";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_K) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "k";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_K) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "K";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_L) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "l";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_L) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "L";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_M) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "m";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_M) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "M";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_N) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "n";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_N) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "N";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_O) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "o";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_O) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "O";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_P) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "p";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_P) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "P";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_Q) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "q";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_Q) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "Q";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_R) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "r";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_R) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "R";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_S) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "s";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_S) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "S";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_T) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "t";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_T) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "T";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_U) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "u";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_U) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "U";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_V) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "v";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_V) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "V";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_W) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "w";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_W) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "W";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_X) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "x";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_X) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "X";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_Y) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "y";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_Y) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "Y";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_Z) && !Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "z";
		}
		else if(Keyboard.isKeyDown(Keyboard.KEY_Z) && Keyboard.isKeyDown(Keyboard.KEY_LSHIFT))
		{
			
			return "Z";
		}
		else 
		{
			return "";
		}
	}
	
	
}